version: '3.5'

services:

  zookeeper:
    image: quay.io/strimzi/kafka:0.23.0-kafka-2.8.0
    command: [
      "sh", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs
    networks:
      - stock-network

  kafka:
    image: quay.io/strimzi/kafka:0.23.0-kafka-2.8.0
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - stock-network

  postgresql:
    image: postgres:13.3
    environment:
      POSTGRES_USER: "quarkus_test"
      POSTGRES_PASSWORD: "quarkus_test"
      POSTGRES_DB: "quarkus_test"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U quarkus_test" ]
      interval: 5s
      timeout: 5s
      retries: 6
    ports:
      - "5432:5432"
    networks:
      - stock-network

  productor:
    image: aleantivero/stock-productor:0.0.2-${QUARKUS_MODE:-jvm}
    build:
      context: productor
      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8080:8080"
    networks:
      - stock-network
    labels:
      kompose.service.type: LoadBalancer

  procesador:
    image: aleantivero/stock-procesador:0.0.2-${QUARKUS_MODE:-jvm}
    build:
      context: procesador
      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
    depends_on:
      - kafka
      - postgresql
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      QUARKUS_DATASOURCE_URL: jdbc:postgresql://postgresql:5432/quarkus_test
      QUARKUS_HTTP_PORT: 8081
    ports:
      - "8081:8081"
    networks:
      - stock-network
    labels:
      kompose.service.type: LoadBalancer

networks:
  stock-network:
    name: stocknetwork
